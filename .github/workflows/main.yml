name: Deploy to GitHub Pages and Run Tests

on:
  push:
    branches: ["dev"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
      - name: Cleanup
        run: rm package-lock.json && rm -rf node_modules
      - name: Install dependencies
        run: npm install --include=dev
      - name: Build
        run: npm run build
      - name: Serve
        run: npm run start-all
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./dist"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  test:
    runs-on: ubuntu-latest
    needs: deploy
    env:
      DB_DATABASE: user
      DB_USER: root
      DB_PASSWORD: root
      LOG_LEVEL: DEBUG
      VITE_APP_API_URL: http://localhost:3001/auth
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE DATABASE IF NOT EXISTS $DB_DATABASE;" -u$DB_USER -p$DB_PASSWORD
          mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASSWORD';" -u root -p$DB_PASSWORD
          mysql -e "GRANT ALL PRIVILEGES ON $DB_DATABASE.* TO '$DB_USER'@'localhost';" -u root -p$DB_PASSWORD
          mysql -e "FLUSH PRIVILEGES;" -u root -p$DB_PASSWORD
          mysql -e "USE $DB_DATABASE; CREATE TABLE IF NOT EXISTS access_tokens (id INT AUTO_INCREMENT PRIMARY KEY, token VARCHAR(255) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);" -u$DB_USER -p$DB_PASSWORD
          mysql -e "USE $DB_DATABASE; CREATE TABLE IF NOT EXISTS refresh_tokens (id INT AUTO_INCREMENT PRIMARY KEY, token VARCHAR(255) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);" -u$DB_USER -p$DB_PASSWORD
          mysql -e "USE $DB_DATABASE; CREATE TABLE IF NOT EXISTS credentials (id INT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);" -u$DB_USER -p$DB_PASSWORD
